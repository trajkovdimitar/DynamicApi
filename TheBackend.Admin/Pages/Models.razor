@page "/models"
@inject ApiClient Api
@using TheBackend.Domain.Models

<h1 class="mdl-typography--headline4">Models</h1>

<div class="mb-4">
    <button class="mdl-button mdl-js-button mdl-button--raised mdl-button--colored" @onclick="NewModel">Add Model</button>
</div>

@if (models == null)
{
    <p>Loading...</p>
}
else
{
    @if (!models.Any())
    {
        <p>No models defined.</p>
    }
    else
    {
        <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
            @foreach (var model in models)
            {
                <div class="mdl-card mdl-shadow--2dp">
                    <div class="mdl-card__title">
                        <h3 class="mdl-card__title-text">@model.ModelName</h3>
                        <button class="mdl-button mdl-js-button" @onclick="() => EditModel(model)">Edit</button>
                    </div>
                    <table class="w-full text-sm">
                        <tbody>
                            @foreach (var prop in model.Properties)
                            {
                                <tr>
                                    <td class="px-4 py-1 font-medium">@prop.Name</td>
                                    <td class="px-4 py-1 text-right">@prop.Type</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    }
}

@if (editingModel != null)
{
    <div class="overlay">
        <div class="modal">
            <h2 class="text-xl font-bold mb-4">@formTitle</h2>
            <EditForm Model="editingModel" OnValidSubmit="SaveModel">
                <div class="mdl-textfield mdl-js-textfield">
                    <InputText class="mdl-textfield__input" @bind-Value="editingModel.ModelName" />
                    <label class="mdl-textfield__label">Model Name</label>
                </div>
                <h3 class="font-semibold mb-2">Properties</h3>
                @foreach (var prop in editingModel.Properties)
                {
                    <div class="mdl-grid" style="align-items:center;">
                        <div class="mdl-cell mdl-cell--2-col">
                            <InputText class="mdl-textfield__input" placeholder="Name" @bind-Value="prop.Name" />
                        </div>
                        <div class="mdl-cell mdl-cell--2-col">
                            <InputText class="mdl-textfield__input" placeholder="Type" @bind-Value="prop.Type" />
                        </div>
                        <div class="mdl-cell mdl-cell--2-col">
                            <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect">
                                <InputCheckbox class="mdl-checkbox__input" @bind-Value="prop.IsKey" />
                                <span class="mdl-checkbox__label">Key</span>
                            </label>
                        </div>
                        <div class="mdl-cell mdl-cell--2-col">
                            <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect">
                                <InputCheckbox class="mdl-checkbox__input" @bind-Value="prop.IsRequired" />
                                <span class="mdl-checkbox__label">Required</span>
                            </label>
                        </div>
                        <div class="mdl-cell mdl-cell--2-col">
                            <InputNumber class="mdl-textfield__input" placeholder="Max Length" @bind-Value="prop.MaxLength" />
                        </div>
                        <div class="mdl-cell mdl-cell--2-col">
                            <button type="button" class="mdl-button mdl-js-button" @onclick="() => RemoveProperty(prop)">Remove</button>
                        </div>
                    </div>
                }
                <button type="button" class="mdl-button mdl-js-button mdl-button--raised" @onclick="AddProperty">Add Property</button>
                <div class="mt-4" style="text-align:right;">
                    <button type="submit" class="mdl-button mdl-js-button mdl-button--raised mdl-button--colored">Save</button>
                    <button type="button" class="mdl-button mdl-js-button" @onclick="CancelEdit">Cancel</button>
                </div>
            </EditForm>
        </div>
    </div>
}

@code {
    private List<ModelDefinition>? models;
    private ModelDefinition? editingModel;
    private string formTitle = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadModels();
    }

    private async Task LoadModels()
    {
        models = await Api.GetAsync<List<ModelDefinition>>("api/models");
    }

    private void NewModel()
    {
        editingModel = new ModelDefinition();
        formTitle = "Create Model";
    }

    private void EditModel(ModelDefinition model)
    {
        editingModel = new ModelDefinition
        {
            ModelName = model.ModelName,
            Properties = model.Properties.Select(p => new PropertyDefinition
            {
                Name = p.Name,
                Type = p.Type,
                IsKey = p.IsKey,
                IsRequired = p.IsRequired,
                MaxLength = p.MaxLength
            }).ToList()
        };
        formTitle = $"Edit {model.ModelName}";
    }

    private void AddProperty()
    {
        editingModel!.Properties.Add(new PropertyDefinition());
    }

    private void RemoveProperty(PropertyDefinition prop)
    {
        editingModel!.Properties.Remove(prop);
    }

    private async Task SaveModel()
    {
        await Api.PostAsync<ModelDefinition, string>("api/models", editingModel!);
        editingModel = null;
        await LoadModels();
    }

    private void CancelEdit()
    {
        editingModel = null;
    }
}
